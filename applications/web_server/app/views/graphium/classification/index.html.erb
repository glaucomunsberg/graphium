<link rel="stylesheet" href="https://unpkg.com/materialize-stepper@3.0.0-beta.1.1.1/dist/css/mstepper.min.css">
<script src="https://unpkg.com/materialize-stepper@3.0.0-beta.1.1.1/dist/js/mstepper.min.js"></script>
<%=breadcrumbs [{:name => 'Home',:path => '/'},{:name => 'Classification', :path => '/graphium/classification'}]%>
<div id="modal_delete" class="modal">
  <div class="modal-content">
    <h4>Deletar o Grafite</h4>
    <div class="row valign-wrapper">
      <div class="col s5">
        <img modal_delete_preview src="" style="width: 100%;">
      </div>
      <div class="col s5 offset-s2" modal_delete_text >
          Você está DELETANDO este graffiti. Você tem certeza desta acão?
      </div>
    </div>
  </div>
  <div class="modal-footer">
    <a onclick="update(40)" class="modal-close waves-effect waves-green btn-flat">Sim</a>
    <a class="modal-close waves-effect waves-green btn-flat">Não</a>
  </div>
</div>
<div id="modal_create" class="modal">
  <div class="modal-content">
    <h4>Criar o Grafite</h4>
    <div class="row valign-wrapper">
      <div class="col s5">
        <img modal_create_preview src="" style="width: 100%;">
      </div>
      <div class="col s5 offset-s2" modal_create_text >
        Você está CRIANDO um novo graffiti. Você tem certeza desta acão?
      </div>
    </div>
  </div>
  <div class="modal-footer">
    <a onclick="update(37)" class="modal-close waves-effect waves-green btn-flat">Sim</a>
    <a class="modal-close waves-effect waves-green btn-flat">Não</a>
  </div>
</div>


<ul class="stepper horizontal" style="margin-top: 0px;">
  <li class="step active">
    <div class="step-title waves-effect" data-step-label="Filtros de panos" >Configurar filtros</div>
    <div class="step-content">
      <!-- CONFIGURATIONS -->
      <div class="row valign-wrapper">
        <div class="col s3">
          Antes de iniciar a classificar, escolha as
          imagens de acordo com a sua classificão prévia
          ou filtre pelo swarm na qual a pano foi classificada.
        </div>
        <div content="col s8 offset-s1">
          <div class="col s12">
            <div class="col s12">
              <b>Imagens from Swarm</b>
            </div>
            <div class="input-field col s12">
              <select name="swarm_id"  class="browser-default" id="swarm_id">
                <option value="" disabled selected>Choose your swarm</option>
                <option id="">Todos</option>
                <% Graphium::Swarm.all.each do |swarm| %>
                  <option id="<%=swarm.identifier %>"><%=swarm.identifier %></option>
                <%end %>
              </select>
            </div>
          </div>
          <div class="col s12">
            <div class="row">
              <div class="col s12" style="margin:20px 0px 10px 0px">
                <b>Images classified as</b>
              </div>
              <div class="col s4">
                <input name="group1" type="radio" checked id="false" />
                <label for="false">False</label>
              </div>
              <div class="col s4">
                <input name="group1" type="radio" id="true" />
                <label for="true">True</label>
              </div>
              <div class="col s4">
                <input name="group1" type="radio" id="true_positive" />
                <label for="true_positive">True Positive</label>
              </div>
              <div class="col s4">
                <input name="group1" type="radio" id="false_positive" />
                <label for="false_positive">False Positive</label>
              </div>
              <div class="col s4">
                <input name="group1" type="radio" id="true_negative" />
                <label for="true_negative">True Negative</label>
              </div>
              <div class="col s4">
                <input name="group1" type="radio" id="false_negative" />
                <label for="false_negative">False Negative</label>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="step-actions">
        <!-- Here goes your actions buttons -->
        <button class="waves-effect waves-dark btn next-step" onclick="play()"><i class="material-icons right">arrow_forward</i>Próxima Etapa</button>
      </div>
    </div>
  </li>
  <li class="step">
    <div class="step-title waves-effect" data-step-label="Analise as panos filtradas">Classificar panos</div>
    <div class="step-content">
      <!-- CLASSIFICATION -->
      <div class="row">
        <div class="col m7 s12">
          <div class="row center" style="margin-top: 8px;">
            <img pano class="materialboxed z-depth-3" src="https://dummyimage.com/725x362/ffffff/2d2338&text=Graphium" style="width: 100%;">
            <a play class="btn-floating btn-large waves-effect waves-light right tooltipped" data-position="top" data-tooltip="Pressione 'I' ou 'S' para iniciar" onclick="play()" style="margin-top: -30px;margin-right: 15px;"><i play class="material-icons">play_arrow</i></a>
          </div>
          <div class="row">
            <div class="row">
              <b>Classified pano as</b>
            </div>
            <div class="row">
              <div class="col s4"></div>
              <div class="col s4 center"><a true_positive class="waves-effect waves-light btn">True Positive</a></div>
              <div class="col s4"></div>
            </div>
            <div class="row">
              <div class="col s4"><a  false_negative class="waves-effect waves-light btn">False Negative</a></div>
              <div class="col s4"></div>
              <div class="col s4"><a true_negative class="waves-effect waves-light btn">True Negative</a></div>
            </div>
            <div class="row">
              <div class="col s4"></div>
              <div class="col s4 center"><a false_positive class="waves-effect waves-light btn">False Positive</a></div>
              <div class="col s4"></div>
            </div>
          </div>
        </div>
        <div class="col s1 valign-wrapper center">
          <i class="material-icons">keyboard_arrow_right</i>
        </div>
        <div class="col m4 s12 offset-s1">
          <div class="row center" style="margin-top: 8px;">
            <img last_pano class="materialboxed z-depth-3" src="https://dummyimage.com/511x255/ffffff/2d2338&text=Graphium" style="width: 100%;">
            <a undo class="btn-floating btn-large waves-effect waves-light right tooltipped" data-position="top" data-tooltip="Voltar a classificao anterior" onclick="back_to()" style="margin-top: -30px;margin-right: 15px;"><i undo class="material-icons">undo</i></a>
          </div>
          <div class="row center">
            <div counter class="s12" style="color: gray;">
              0 de ?
            </div>
          </div>

          <div class="row" style="">
            <div class="col s6">
              <b>Current pano id</b>
            </div>
            <div class="col s6">
              <b>Last pano id</b>
            </div>
          </div>
          <div class="row" style="margin-bottom: 0px;">
            <div current_pano_id class="col s6 tooltipped truncate" data-position="top" data-tooltip="Pano ID atual" style="color:#757575; cursor:pointer">Pano IP</div>
            <div last_pano_id class="col s6 tooltipped truncate" data-position="top" data-tooltip="Pano ID anterior" style="color:#757575;cursor:pointer">Last Pano IP</div>
          </div>
          <div class="row" style="">
            <div class="col s6">
              <b>Similar classifications</b>
            </div>
          </div>
          <div class="row">
            <div similar_classifications class="col s12 tooltipped truncate" data-position="top" data-tooltip="Similar classification of Pano ID" style="color:#757575; cursor:pointer">Pano IP</div>
          </div>

        </div>
      </div>
      <div class="step-actions">
        <!-- Here goes your actions buttons -->
        <button class="waves-effect waves-dark btn next-step"><i class="material-icons right">arrow_forward</i>Ver resultados</button>
      </div>
    </div>
  </li>
  <li class="step">
    <div class="step-title waves-effect">Resultados</div>
    <div class="step-content">
      <!-- RESULTS -->
      <div class="row center" style="margin: .5rem 0 1rem 0;">
        <table class="tg">
          <thead>
          <tr>
            <th>Classification</th>
            <th>Total</th>
          </tr>
          </thead>
          <tbody>
          <tr>
            <th class="tg-s268">
              True
            </th>
            <th class="tg-s268">
              <div results_true class="col s3 tooltipped" data-position="top" data-tooltip="True" style="color:#757575; cursor:pointer">0</div>
            </th>
          </tr>
          <tr>
            <td class="tg-s268">
              False
            </td>
            <td class="tg-s268">
              <div results_false class="col s6 tooltipped" data-position="top" data-tooltip="False" style="color:#757575;cursor:pointer">0</div>
            </td>
          </tr>
          <tr>
            <td class="tg-s268">
              True Positive
            </td>
            <td class="tg-s268">
              <div results_true_positive class="col s3 tooltipped" data-position="top" data-tooltip="Total True Positive" style="color:#757575; cursor:pointer">0</div>
            </td>
          </tr>
          <tr>
            <td class="tg-s268">
              True Negative
            </td>
            <td class="tg-s268">
              <div results_true_negative class="col s3 tooltipped" data-position="top" data-tooltip="Total True Negative" style="color:#757575;cursor:pointer">0</div>
            </td>
          </tr>
          <tr>
            <td class="tg-s268">
              False Negative
            </td>
            <td class="tg-s268">
              <div results_false_negative class="col s3 tooltipped" data-position="top" data-tooltip="Total False Negative" style="color:#757575;cursor:pointer">0</div>
            </td>
          </tr>
          <tr>
            <td class="tg-s268">
              False Positive
            </td>
            <td class="tg-s268">
              <div results_false_positive class="col s3 tooltipped" data-position="top" data-tooltip="Total False Positive" style="color:#757575; cursor:pointer">0</div>
            </td>
          </tr>
          <tr>
            <td class="tg-s268">
              Sensibilidade
            </td>
            <td class="tg-s268">
              <div results_sensibility class="col s3 tooltipped" data-position="top" data-tooltip="Total False Positive" style="color:#757575; cursor:pointer">0</div>
            </td>
          </tr>
          <tr>
            <td class="tg-s268">
              Especificidade
            </td>
            <td class="tg-s268">
              <div results_especificility class="col s3 tooltipped" data-position="top" data-tooltip="Total False Positive" style="color:#757575; cursor:pointer">0</div>
            </td>
          </tr>
          <tr>
            <td class="tg-s268">
              Valor Preditivo Positivo
            </td>
            <td class="tg-s268">
              <div results_preditive_positive class="col s3 tooltipped" data-position="top" data-tooltip="Total False Positive" style="color:#757575; cursor:pointer">0</div>
            </td>
          </tr>
          <tr>
            <td class="tg-s268">
              Valor Preditivo Negativo
            </td>
            <td class="tg-s268">
              <div results_preditive_negative class="col s3 tooltipped" data-position="top" data-tooltip="Total False Positive" style="color:#757575; cursor:pointer">0</div>
            </td>
          </tr>
          </tbody>
        </table>
      </div>
      <div class="step-actions">
        <!-- Here goes your actions buttons -->
        <button class="waves-effect waves-dark btn next-step">Finalizar</button>
      </div>
    </div>
  </li>
</ul>
<script>
  var pano_position = 0;
  var pano_total = 0;
  var playing = false;
  var pano_id_mongo = "";
  var pano_id = "";
  var pano_src = "";
  var pano_heading = "";
  var restarted = false;
  var pano_old_classification = null;
  var pano_old_src = "";
  var pano_old_id = "";
  var pano_old_heading = "";

  function play(){
      if(!playing){
          $('i[play]').text('stop');
          $('.collapsible').collapsible('open', 0);
          $('.collapsible').collapsible('close', 1);
          inicialize();
      }else{
          $('i[play]').text('play_arrow');
          $('.collapsible').collapsible('open', 0);
          $('.collapsible').collapsible('close', 1);
          $('div[counter]').text('0/0');
      }
      playing = !playing;
  }

  function inicialize(){
      $.ajax({
          type: 'get',
          url: '/graphium/classification/getInformation',
          data: {
              'pano_position':pano_position,
              'false': document.querySelector('#false').checked,
              'true': document.querySelector('#true').checked,
              'false_positive': document.querySelector('#false_positive').checked,
              'false_negative': document.querySelector('#false_negative').checked,
              'true_positive': document.querySelector('#true_positive').checked,
              'true_negative': document.querySelector('#true_negative').checked,
              'swarm_identifier': document.querySelector('#swarm_id').value
          },
          beforeSend: function() {
              pano_old_src = $('img[pano]').attr('src');
              $('img[pano]').attr('src','https://dummyimage.com/511x255/ffffff/2d2338&text=Loading...')
          },
          success: function(data) {

              //console.log('data retorned',data);
              if(data.results != null){

                  $('div[results_true]').text(data.results.true);
                  $('div[results_false]').text(data.results.false);
                  $('div[results_true_positive]').text(data.results.true_positive);
                  $('div[results_false_positive]').text(data.results.false_positive);
                  $('div[results_true_negative]').text(data.results.true_negative);
                  $('div[results_false_negative]').text(data.results.false_negative);
                  $('div[results_sensibility]').text(data.results.sensibility);
                  $('div[results_especificility]').text(data.results.especificility);
                  $('div[results_preditive_negative]').text(data.results.preditive_negative);
                  $('div[results_preditive_positive]').text(data.results.preditive_positive);
              }

              if(data.pano == null){
                  if(!restarted){
                      pano_position = 0;
                      pano_total = 0;
                      restarted = !restarted;
                      inicialize();
                  }else{
                      Materialize.toast('Não há mais o que classificar com esta(s) categoria(s)', 3000);
                  }

              }else{
                  pano_id_mongo = data.pano._id.$oid;
                  pano_id = data.pano.pano_id;
                  pano_old_heading = pano_heading;
                  pano_heading = data.pano.heading;
                  pano_src = "https://maps.googleapis.com/maps/api/streetview?size=600x300&pano="+data.pano.pano_id+"&heading="+data.pano.heading+"&pitch="+data.pano.splited+"&key=AIzaSyB6_XPVntnTJHG9jN9OrO11ou8GEV77qOM";
                  $('img[last_pano]').attr('src',pano_old_src);
                  $('img[pano]').attr('src',pano_src);
                  pano_old_id = $('div[current_pano_id]').text();
                  $('div[last_pano_id]').html($('div[current_pano_id]').text());
                  $('div[last_pano_id]').attr('onclick', $('div[current_pano_id]').attr('onclick'));

                  $('div[current_pano_id]').html(data.pano.pano_id);
                  $('div[current_pano_id]').attr('onclick', "window.open('"+pano_src+"')");
                  $('a[false_negative]').removeClass('btn');
                  $('a[false_positive]').removeClass('btn');
                  $('a[true_negative]').removeClass('btn');
                  $('a[true_positive]').removeClass('btn');
                  $('a[false_negative]').removeClass('btn-flat');
                  $('a[false_positive]').removeClass('btn-flat');
                  $('a[true_negative]').removeClass('btn-flat');
                  $('a[true_positive]').removeClass('btn-flat');
                  $('div[counter]').text(pano_position+' de '+data.total);
                  pano_old_classification = data.pano.classification
                  switch (data.pano.classification) {
                      case "F":
                          $('a[false_negative]').addClass('btn');
                          $('a[true_negative]').addClass('btn');
                          break;
                      case "T":
                          $('a[true_positive]').addClass('btn');
                          $('a[false_positive]').addClass('btn');
                          break;
                      case "FP":
                          $('a[false_positive]').addClass('btn');
                          break;
                      case "FN":
                          $('a[false_negative]').addClass('btn');
                          break;
                      case "TP":
                          $('a[true_positive]').addClass('btn');
                          break;
                      case "TN":
                          $('a[true_negative]').addClass('btn');
                          break;
                      default:
                          alert("I can't understand: "+data.pano.classification)
                  }

                  if(data.classifieds != null){
                      $('div[classified_true_positive]').text(data.classifieds.TP);
                      $('div[classified_true_negative]').text(data.classifieds.TN);
                      $('div[classified_false_negative]').text(data.classifieds.FN);
                      $('div[classified_false_positive]').text(data.classifieds.FP);
                      $('div[classified_true]').text(data.classifieds.T);
                      $('div[classified_false]').text(data.classifieds.F);
                  }

                  classifications = {"T":0,"F":0,"FN":0,"FP":0,"TP":0,"TN":0};

                  similar_on_database = "";

                  $('div[similar_classifications]').html("");
                  for(var a=0; a < data.similar_classifications.length; a++){
                      classifications[data.similar_classifications[a]]+=1
                  }
                  $('div[similar_classifications]').html("<p class='col s6'>"+classifications["T"]+" Positives</p><p class='col s6'>"+classifications["F"]+" Falses</p><p class='col s6'>"+classifications["TP"]+" True Positives</p><p class='col s6'>"+classifications["TN"]+" True Negatives</p><p class='col s6'>"+classifications["FN"]+" False Negatives</p><p class='col s6'>"+classifications["FP"]+" False Positives</p>");
              }
          },
          error: function(xhr) { // if error occured
              alert("Error occured.please try again");
              $('img[pano]').attr('src','https://dummyimage.com/511x255/ffffff/2d2338&text=Ooops...')
          },
          complete: function() {

          }
      });
  }

  function back_to(){

      var pano_old_classification = "";

      if(document.querySelector('#false').checked){
          pano_old_classification = "F"
      }else if(document.querySelector('#true').checked){
          pano_old_classification = "T"
      }else if(document.querySelector('#false_positive').checked){
          pano_old_classification = "FP"
      }else if(document.querySelector('#false_negative').checked){
          pano_old_classification = "FN"
      }else if(document.querySelector('#true_positive').checked){
          pano_old_classification = "TP"
      }else if(document.querySelector('#true_negative').checked){
          pano_old_classification = "TN"
      }else{
          alert('Cant idenfity classification to holdback')
      }

      $.ajax({
          type: 'get',
          url: '/graphium/classification/updatePano',
          data: {
              'pano_id_mongo': pano_id_mongo,
              'pano_id': pano_old_id,
              'heading': pano_old_heading,
              'pano_classification': pano_old_classification,
              'swarm_identifier': document.querySelector('#swarm_id').value
          },
          beforeSend: function() {
              //$('img[pano]').attr('src','https://dummyimage.com/400x400/ffffff/2d2338&text=Updating...')
          },
          success: function(data) {
              Materialize.toast('A imagem voltou a classificão anteriro', 4000)
              //console.log(pano_position, data)
          },
          error: function(xhr) { // if error occured
              alert("Error occured.please try again");
              $('img[pano]').attr('src','https://dummyimage.com/511x255/ffffff/2d2338&text=Ooops...')
          },
          complete: function() {

          }
      });
  }

  function update(key_value){

      let pano_classification = "";

      switch (key_value) {
          case 37:
              pano_classification = "FN";
              break;
          case 38:
              pano_classification = "TP";
              break;
          case 39:
              pano_classification = "TN";
              break;
          case 40:
              pano_classification = "FP";
              break;
      }

      $.ajax({
          type: 'get',
          url: '/graphium/classification/updatePano',
          data: {
              'pano_id':pano_id,
              'pano_id_mongo': pano_id_mongo,
              'heading': pano_heading,
              'pano_classification': pano_classification,
              'swarm_identifier': document.querySelector('#swarm_id').value
          },
          beforeSend: function() {
              //$('img[pano]').attr('src','https://dummyimage.com/400x400/ffffff/2d2338&text=Updating...')
          },
          success: function(data) {
              pano_position++;
              inicialize();

              switch (pano_classification) {
                  case "FN":
                      $('div[classified_false_negative]').text(parseInt($('div[classified_false_negative]').text())+1);
                      break;
                  case "TP":
                      $('div[classified_true_positive]').text(parseInt($('div[classified_true_positive]').text())+1);
                      break;
                  case "TN":
                      $('div[classified_true_negative]').text(parseInt($('div[classified_true_negative]').text())+1);
                      break;
                  case "FP":
                      $('div[classified_false_positive]').text(parseInt($('div[classified_false_positive]').text())+1);
                      break;
                  default:
                      console.log('I cant identify honey');
              }

              if(pano_old_classification == "F"){
                  $('div[classified_false]').text(parseInt($('div[classified_false]').text())-1);
              }else if(pano_old_classification == "T"){
                  $('div[classified_true]').text(parseInt($('div[classified_true]').text())-1);
              }else{
                  console.log('Cant identifi old classification')
              }

              if(data.classifieds != null){
                  $('div[classified_true_positive]').text(data.classifieds.TP);
                  $('div[classified_true_negative]').text(data.classifieds.TN);
                  $('div[classified_false_negative]').text(data.classifieds.FN);
                  $('div[classified_false_positive]').text(data.classifieds.FP);
              }
              //console.log(pano_position, data)
          },
          error: function(xhr) { // if error occured
              alert("Error occured.please try again");
              $('img[pano]').attr('src','https://dummyimage.com/511x255/ffffff/2d2338&text=Ooops...')
          },
          complete: function() {

          }
      });
  }

  $(document).ready(function () {

      $('.collapsible').collapsible();
      $('.modal').modal();

      $('.stepper').css('minHeight',$(window).height()-65+"px");

      var stepper = document.querySelector('.stepper');
      var stepperInstace = new MStepper(stepper, {
          // options
          firstActive: 0 // this is the default
      });

      $(document).on('keydown', function (e) {
          //console.log('Code key',e.keyCode);
          //console.log(typeof e.keyCode);
          switch (e.keyCode) {
              case 39:
              case 38:
                  update(e.keyCode);
                  break;
              case 37:
                  $('img[modal_create_preview]').attr("src",pano_src);
                  $('#modal_create').modal('open');
                  break;
              case 40:
                  $('img[modal_delete_preview]').attr("src",pano_src);
                  $('#modal_delete').modal('open');
                  break;
              case 73:
              case 83:
                  play();
                  break;
              default:
                  console.log("undefined to ",e.keyCode)
          }
      });
  });

  $('div[container]').removeClass('container')
</script>
<style>
  body nav{
    box-shadow: none;
  }
  div[similar_classifications] p{
    margin: 0px !important;
  }
</style>